#
# weechat -- trigger.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[look]
enabled = on
monitor_strip_colors = off

[color]
flag_command = lightgreen
flag_conditions = yellow
flag_post_action = lightblue
flag_regex = lightcyan
flag_return_code = lightmagenta
regex = white
replace = cyan
trigger = green
trigger_disabled = red

[trigger]
beep.arguments = ""
beep.command = "/print -beep"
beep.conditions = "${tg_displayed} && (${tg_highlight} || ${tg_msg_pv})"
beep.enabled = on
beep.hook = print
beep.post_action = none
beep.regex = ""
beep.return_code = ok
cmd_pass.arguments = "5000|input_text_display;5000|history_add;5000|irc_command_auth"
cmd_pass.command = ""
cmd_pass.conditions = ""
cmd_pass.enabled = on
cmd_pass.hook = modifier
cmd_pass.post_action = none
cmd_pass.regex = "==^((/(msg|m|quote) +nickserv +(id|identify|register|ghost +[^ ]+|release +[^ ]+|regain +[^ ]+) +)|/oper +[^ ]+ +|/quote +pass +|/set +[^ ]*password[^ ]* +|/secure +(passphrase|decrypt|set +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
cmd_pass.return_code = ok
complete_last_nick.arguments = "/input complete_next"
complete_last_nick.command = "/input insert ${last_nick}"
complete_last_nick.conditions = "${type} == channel && ${buffer.input_buffer_length} == 0 && ${last_nick}"
complete_last_nick.enabled = on
complete_last_nick.hook = command_run
complete_last_nick.post_action = none
complete_last_nick.regex = ""
complete_last_nick.return_code = ok
greentext.arguments = "weechat_print"
greentext.command = ""
greentext.conditions = "${tg_message_nocolor} =~ ^>[^:._]"
greentext.enabled = on
greentext.hook = modifier
greentext.post_action = none
greentext.regex = "/(.*)/${tg_prefix}\t${color:34}${tg_message}"
greentext.return_code = ok
highmon_like.arguments = ""
highmon_like.command = "/print -newbuffer highmon ${color:default}${server}:${channel}\t${if:${tg_tags} !~ ,irc_action,?${weechat.look.quote_nick_prefix}${tg_prefix}${color:reset}${weechat.look.quote_nick_suffix}:${tg_prefix}${color:reset}} ${tg_message}"
highmon_like.conditions = "${tg_tags} =~ ,irc_notify, || ${tg_msg_pv} == 1 || ${tg_highlight} == 1 && ${buffer.local_variables.type} == channel && ${tg_tags} =~ ,irc_privmsg,"
highmon_like.enabled = on
highmon_like.hook = print
highmon_like.post_action = none
highmon_like.regex = ""
highmon_like.return_code = ok
last_nick.arguments = "irc.*;notify_message"
last_nick.command = "/buffer set localvar_set_last_nick ${tg_tag_nick}"
last_nick.conditions = "${tg_displayed} && ${type} == channel && ${tg_tag_nick} != ${nick}"
last_nick.enabled = on
last_nick.hook = print
last_nick.post_action = none
last_nick.regex = ""
last_nick.return_code = ok
msg_auth.arguments = "5000|irc_message_auth"
msg_auth.command = ""
msg_auth.conditions = ""
msg_auth.enabled = on
msg_auth.hook = modifier
msg_auth.post_action = none
msg_auth.regex = "==^(.*(id|identify|register|ghost +[^ ]+|release +[^ ]+) +)(.*)==${re:1}${hide:*,${re:+}}"
msg_auth.return_code = ok
nick_color_action.arguments = "weechat_print"
nick_color_action.command = ""
nick_color_action.conditions = "${tg_tags} =~ ,irc_action, && ${tg_tags} !~ ,self_msg,"
nick_color_action.enabled = on
nick_color_action.hook = modifier
nick_color_action.post_action = none
nick_color_action.regex = "/.*/${info:nick_color,${tg_tag_nick}}${tg_prefix_nocolor}\t${tg_message}"
nick_color_action.return_code = ok
preview_nick_colors.arguments = "2000|input_text_display"
preview_nick_colors.command = ""
preview_nick_colors.conditions = "${tg_string} =~ ^/set\s+weechat\.color\.chat_nick_colors\s+"
preview_nick_colors.enabled = on
preview_nick_colors.hook = modifier
preview_nick_colors.post_action = none
preview_nick_colors.regex = "/^\S+\s+\S+(.+)$/${re:1}/tg_string_nocolor /([^",]+)/${color:${re:1}}${re:1}${color:default}/tg_string_nocolor /^(\S+\s+\S+).*$/${re:1}${tg_string_nocolor}/tg_string"
preview_nick_colors.return_code = ok
server_pass.arguments = "5000|input_text_display;5000|history_add"
server_pass.command = ""
server_pass.conditions = ""
server_pass.enabled = on
server_pass.hook = modifier
server_pass.post_action = none
server_pass.regex = "==^(/(server|connect) .*-(sasl_)?password=)([^ ]+)(.*)==${re:1}${hide:*,${re:4}}${re:5}"
server_pass.return_code = ok
spacecmd.arguments = "input_text_for_buffer"
spacecmd.command = "/print ${tg_string_nocolor} prevented"
spacecmd.conditions = "${tg_string} =~ ^\s+/"
spacecmd.enabled = on
spacecmd.hook = modifier
spacecmd.post_action = none
spacecmd.regex = "/.*//"
spacecmd.return_code = ok
spaces_out.arguments = "input_text_for_buffer"
spaces_out.command = ""
spaces_out.conditions = ""
spaces_out.enabled = on
spaces_out.hook = modifier
spaces_out.post_action = none
spaces_out.regex = "/ +$//"
spaces_out.return_code = ok
upgrade_scripts.arguments = "day_changed"
upgrade_scripts.command = "/script update;/wait 10s /script upgrade"
upgrade_scripts.conditions = ""
upgrade_scripts.enabled = on
upgrade_scripts.hook = signal
upgrade_scripts.post_action = none
upgrade_scripts.regex = ""
upgrade_scripts.return_code = ok
url_color.arguments = "weechat_print"
url_color.command = ""
url_color.conditions = "${tg_tags} !~ irc_quit"
url_color.enabled = on
url_color.hook = modifier
url_color.post_action = none
url_color.regex = ";[a-z]+://\S+;${color:brown}${re:0}${color:reset};"
url_color.return_code = ok
whois_on_query.arguments = "irc_pv_opened"
whois_on_query.command = "/command -buffer ${buffer[${tg_signal_data}].full_name} * wii ${buffer[${tg_signal_data}].local_variables.channel}"
whois_on_query.conditions = ""
whois_on_query.enabled = on
whois_on_query.hook = signal
whois_on_query.post_action = none
whois_on_query.regex = ""
whois_on_query.return_code = ok
