#!/bin/bash

# c-basic-offset: 4; tab-width: 4; indent-tabs-mode: t
# vi: set shiftwidth=4 tabstop=4 noexpandtab:
# :indentSize=4:tabSize=4:noTabs=false:

set -o nounset
set -o errexit
set -o pipefail


# shellcheck disable=SC1090
source "$HOME/bin/common.bash"

dropbox=$HOME/Dropbox
publoc=$dropbox/Public/misc
tmploc=$dropbox/Temp/tmp

function dropbox_file_status() {
	local out
	local status
	local wait

	sleep 1
	wait=1
	while [ $wait -eq 1 ]
	do
		out=$(dropbox filestatus "${pubfile}")
		if [[ "${out}" =~ "syncing" ]]
		then
			status=(-1 "Syncing")
			wait=1
			sleep 3
		elif [[ "${out}" =~ "File doesn\'t exist" ]]
		then
			status=(1 "File doesn't exist")
			wait=0
		elif [[ "${out}" =~ "up to date" ]]
		then
			status=(0 "Synced")
			wait=0
		else
			status=(2 "Unknown error: ${out}")
			wait=0
		fi
	done >/dev/null 2>&1
	echo "${status[@]}"
}



file="${*:-$(xclip -selection clipboard -out)}"
if [ ! -f "${file}" ]
then
	notify_desktop critical "Dropbox Publish error" "File  \"${file}\" not found"
	exit 1
fi

pubfilename=$(basename "${file}" | sed -r 's/\ +/_/g')
pubfile="${publoc}/${pubfilename}"

# do not copy the file to Dropbox/Public if the file is already in Dropbox tmp folder
if [[ ! "$file" =~ $tmploc ]]
then
	notify_debug "Copying ${file} to ${pubfile}"
	cp "${file}" "${pubfile}"
fi

dropbox_puburl="$(dropbox sharelink "${pubfile}")"
notify_debug "shared on ${dropbox_puburl}"
if ! [[ ${dropbox_puburl:0:4} == http ]]
then
	notify_desktop critical "Dropbox Publish error" "sharelink failed, got: ${dropbox_puburl}"
	exit 1
fi

bitly_url="$(bitly "${dropbox_puburl}" | tr -d '\n')"
notify_debug "Got ${bitly_url} from Bitly"
echo -n "${bitly_url}" | xclip -in -selection clipboard

status=($(dropbox_file_status))
if [ "${status[0]}" -eq 0 ]
then
	notify_desktop normal "Dropbox Published file $file" "uploaded to $dropbox_puburl\n\nshort url = $bitly_url"
	notify					"Dropbox Published file $file" "uploaded to $dropbox_puburl\n\nshort url = $bitly_url"
else
	notify					"Dropbox Publish error" "${status[1]}"
fi

exit "${status[0]}"
