#!/bin/bash -e

## Parameters

tmp=/tmp/filelist.log
defaultbg="$HOME/.background.png"
lockscreen_image="$HOME/.lockscreen.png"
pictures=Pictures/Backgrounds

p1="$1"
p2="$2"


## Functions

error() {
    echo "$*" >&2
    exit 1
}

checkcli() {
    # check cli parameters
    if [ -z "$p1" ]     # zero parameters
    then
        action='default'
        target="${defaultbg}"
    elif [ ! -z "$p2" ] # two parameters
    then
        action="$p1"
        target="$p2"
    else                # only one parameter
        case "$p1" in
            ## keep this in sync with options in main loop
            lock|redisplay|default)
                action="$p1"
                if [ ! -z "$p2" ] # two parameters
                then
                    target="${p2}"
                else
                    target="${defaultbg}"
                fi
                ;;
            *)
                action='default'
                target="$p1"
                ;;
        esac
    fi
}

checktarget() {
    ## check target

    if [ -r "${target}" ]
        then :
    elif [ -r "$HOME/${pictures}/${target}" ]
        then target="$HOME/${pictures}/${target}"
    elif [ -r "$HOME/${target}" ]
        then target="$HOME/${target}"
    else
        error "Cannot find a target \"${target}\""
    fi
}

pickpic() {
    # get picture according to target
    # target is set to a file/dir we can read
    if [ -d "${target}" ]
    then # if directory, the pick a random picture
        pictures="${target}"

        # disable shell expansion for the iregex
        set -o noglob
        # Create a temporary logfile of all matches
        find -L ${pictures} -iregex .*.jpg -o -iregex .*.png > ${tmp}
        # reenable shell expansion
        set +o noglob

        # Choose a random line number (any number from 1 to the length of the file)
        LowerBound=1
        RandomMax=32767
        UpperBound=$(cat ${tmp} | wc -l)
        if [ $UpperBound -eq 0 ]
        then
            error "No matching pictures found."
        fi
        RandomLine=$(( $LowerBound + ($UpperBound * $RANDOM) / ($RandomMax + 1) ))

        # Use sed to grab the random line
        background=$(sed -n "$RandomLine{p;q;}" "${tmp}")
    else # a file, should be a picture
        background="${target}"
    fi
    background=`readlink -e "${background}"`
}

definebg() {
    # set as default background
    ln -nfs "${background}" "${defaultbg}"
}

displaybg() {
    # set the background
    feh --no-fehbg --bg-fill ${defaultbg}
}

createlockpic() {
    # create a picture fill-resized to the primary screen for the lockscreen
    disp_res=`xrandr | grep primary | awk '{print $4}' | sed s/\+.*//g`
    convert "${background}" -resize ${disp_res}^ \
                            -gravity center \
                            -extent ${disp_res} \
                            "${lockscreen_image}"
}

showpath() {
    # show which picture is used
    echo `readlink --canonicalize ${background}`
}

main() {
    case ${action} in
        ## keep this in sync with options in checkcli
        'lock')
            pickpic
            createlockpic
            showpath
            ;;
        'redisplay') # just redisplay bg, adjusts new screen sizes
            displaybg
            ;;
        'default')  # default action, pick and set a background
            pickpic
            definebg
            displaybg
            showpath
            createlockpic
            ;;
        *)
            error "Unknown action \"${action}\""
            ;;
    esac
}


## Main

# what parameters did we get?
checkcli

# resolve target
checktarget

# action, and target are verified and set
main

