#!/bin/bash

set -o nounset
set -o errexit
set -o pipefail

# log this scripts full output
# exec >> ~/.lock.log 2>&1

# load some defaults
source ~/etc/defaults

lockscreen="${1:-$default_lockscreen}"
MYUID="$(id -u "${USER}")"
PIDPATH=/var/run/user/${MYUID:-1000}/i3lock
PIDFILE=${PIDPATH}/pid
install -g serge -o serge -m 700 -d "${PIDPATH}"


##############################
## subroutines              ##
##############################

function prepare() {
	if [ ! "$lockscreen" = "keep" ] && [ ! "$lockscreen" = "blurred" ]
	then
	    # we requested an Picture Background: update background lockscreen
	    setbg lock "$lockscreen"
	elif [ "$lockscreen" = "blurred" ]
	then
	    # take a screenshot and blur it for the lock screen
		/usr/bin/maim --format=png --hidecursor --quality 7 --quiet "$screenshot_image"
	    convert "$screenshot_image" -blur 0x7 "$lockscreen_image"
	fi

	PLAYERCTLSTATUS="$(playerctl status)"
}

function setpid() {
	PID=$$
	echo $PID >"${PIDFILE}"
	echo lock started with pid $PID
}

function delpid() {
	rm -f "${PIDFILE}"
}

function pre_lock() {
	# make sure music stops
	if [ "${PLAYERCTLSTATUS}" = "Playing" ]
	then
		playerctl stop
	fi

	# make sure presentation mode is off
	presentation-mode stop

	# pause notifications (sleep because seems too soon after pres mode stop)
	(sleep 1; killall -v -SIGUSR1 dunst) & # pause

	# lock remote irssi screen
	bin/irc lock &

	setpid
}

function post_lock() {
    # re-enable notifications when unlock happens
    killall -v -SIGUSR2 dunst

	# re-renable music if it was playing
	if [ "${PLAYERCTLSTATUS}" = "Playing" ]
	then
		playerctl play
	fi

	delpid
}

function perform_lock() {
	pre_lock

	# perform the lock and exit this script
	# see etc/root/etc/systemd/system/i3lock.service where this lock is called 'forking'
    # lock screen with a background picture
    # --nofork makes sure i3lock doesn't return until it gets unlocked
    i3lock --show-failed-attempts --tiling --nofork --ignore-empty-password --image ~/.lockscreen.png

	# post lock to be run after screen is unlocked
	post_lock
}

function main() {
	prepare
	perform_lock &  # goes to background as this script needs to end and handover to systemd (in case called as part of suspend)
	# add in a bit to make sure the screen is locked before we handover to systemd suspend
	sleep 1
	}

main

